INTRO
========================================

The 'Workflow' Perl module implements a standalone workflow system. It
aims to be simple but flexible and therefore powerful. Each piece of
the workflow system has a direct and easily stated job, and hopefully
you'll find that you can put the pieces together to create very useful
systems.

Read 'perldoc Workflow' for a more detailed introduction, sample usage,
interactions with your applications, and more.


INSTALLATION
========================================

To install this module type one of the following:

 perl Makefile.PL  or   perl Build.PL
 make                   ./Build
 make test              ./Build test
 make install           ./Build install


QUICK START
========================================

The eg/ticket/ directory contains a configured workflow system. You
can access the same data and logic in two ways:

  * a command-line application (ticket.pl)
  * a CGI script               (ticket.cgi)
  * a web application          (ticket_web.pl)

To initialize:

 perl ticket.pl --db

To run the command-line application:

 perl ticket.pl

To access the database and data from CGI, add the relevant
configuration for your web server and call ticket.cgi:

 http://www.mysite.com/workflow/ticket.cgi

To start up the standalone web server:

 perl ticket_web.pl

For more info, see 'eg/ticket/README'


MORE INFO
========================================

Issues (tasks, feature requests, bugs) are tracked via JIRA at:

  http://jira.openinteract.org/

The Workflow home page:

  http://workflow.openinteract.org/


DEPENDENCIES
========================================

This module requires these other modules and libraries:

    Class::Accessor
    DateTime
    DateTime::Format::Strptime
    DBD::Mock
    Exception::Class
    File::Spec
    Log::Dispatch
    Log::Log4perl
	Test::More
    XML::Simple

Other optional modules include:

    Data::UUID
    DBI (plus a relevant DBD)
    SPOPS

For the sample application you'll also need:

    CGI
    CGI::Cookie
    DBD::SQLite
    HTTP::Daemon
    HTTP::Request
    HTTP::Response
    HTTP::Status
    Template (Template Toolkit)

(For Win32 systems you can get the Template Toolkit and DBD::SQLite
PPDs from TheoryX:
http://theoryx5.uwinnipeg.ca/cgi-bin/ppmserver?urn:/PPMServer58)


COPYRIGHT AND LICENCE
========================================

Copyright (c) 2003 - 2004 Chris Winters and Arvato Direct. All rights
reserved.  This program is free software; you can redistribute it
and/or modify it under the same terms as Perl itself.
